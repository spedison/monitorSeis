plugins {
    id 'application'
    id 'java'
    id 'groovy'
}

group = 'br.jus.tre-sp'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {

    // Dependência para envio de e-mail
    implementation 'javax.mail:javax.mail-api:1.6.2'

    // Implementação concreta da API de email (opcional, mas necessária para envio real)
    implementation 'com.sun.mail:javax.mail:1.6.2'

    // Dependência opcional para logs (caso queira usar no futuro)
    implementation 'org.slf4j:slf4j-api:2.0.7'
    //implementation 'org.slf4j:slf4j-simple:2.0.7'
    // API SLF4J
    implementation 'org.slf4j:slf4j-api:2.0.7'
    // Implementação do Logback
    implementation 'ch.qos.logback:logback-classic:1.4.11'

    implementation 'org.codehaus.groovy:groovy:3.0.21'

    // Lombok para evitar boilerplate
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

application {
    mainClass = 'br.jus.tre_sp.Main'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:unchecked'] // Adiciona o parâmetro -Xlint:unchecked
    options.encoding = 'UTF-8'
}

tasks.jar {
    manifest {
        attributes(
                'Main-Class': application.mainClass,
                'Class-Path': configurations.runtimeClasspath.files.collect { "lib/${it.name}" }.join(' ')
        )
    }
}

tasks.register('buildLibs', Copy) {
    description = 'Copia todas as dependências para o diretório lib'
    group = 'build'

    from configurations.runtimeClasspath // Dependências em tempo de execução
    into "$buildDir/libs/lib"            // Diretório de saída das libs
}

tasks.register('customDist') {
    description = 'Gera o JAR do projeto e um diretório lib contendo as dependências'
    group = 'build'

    dependsOn(jar)   // Garante que o JAR principal será construído
    dependsOn(buildLibs) // Garante que as dependências serão copiadas
}


test {
    useJUnitPlatform()
}

defaultTasks 'customDist'
